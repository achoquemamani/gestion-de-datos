USE GD2C2022
GO

-- BORRADO DE FKS
IF OBJECT_ID('HARAKIRI.VENTA_CLIENTE_CODIGO', 'F') IS NOT NULL
  ALTER TABLE HARAKIRI.VENTA DROP CONSTRAINT VENTA_CLIENTE_CODIGO
GO

IF OBJECT_ID('HARAKIRI.LOCALIDAD_PROVINCIA_CODIGO', 'F') IS NOT NULL
  ALTER TABLE HARAKIRI.LOCALIDAD DROP CONSTRAINT LOCALIDAD_PROVINCIA_CODIGO
GO

IF OBJECT_ID('HARAKIRI.COMPRA_MEDIO_DE_PAGO_CODIGO', 'F') IS NOT NULL
  ALTER TABLE HARAKIRI.COMPRA DROP CONSTRAINT COMPRA_MEDIO_DE_PAGO_CODIGO
GO

IF OBJECT_ID('HARAKIRI.PROVEEDOR_CUIT', 'F') IS NOT NULL
  ALTER TABLE HARAKIRI.COMPRA DROP CONSTRAINT PROVEEDOR_CUIT
GO

--HACER BORRADO DE FKS QUE REFERENCIEN A PROVEEDOR
--HACER EL BORRADO DE FKS QUE REFERENCIEN A VENTAS

-- BORRADO DE TABLAS

IF OBJECT_ID('HARAKIRI.NOMBRE_TABLA', 'U') IS NOT NULL
  DROP TABLE HARAKIRI.NOMBRE_TABLA
  PRINT('Tabla HARAKIRI.NOMBRE_TABLA eliminada')
GO

IF OBJECT_ID('HARAKIRI.PROVEEDOR', 'U') IS NOT NULL
  DROP TABLE HARAKIRI.PROVEEDOR
  PRINT('Tabla HARAKIRI.PROVEEDOR eliminada')
GO

IF OBJECT_ID('HARAKIRI.LOCALIDAD', 'U') IS NOT NULL
  DROP TABLE HARAKIRI.LOCALIDAD
  PRINT('Tabla HARAKIRI.LOCALIDAD eliminada')
GO

IF OBJECT_ID('HARAKIRI.PROVINCIA', 'U') IS NOT NULL
  DROP TABLE HARAKIRI.PROVINCIA
  PRINT('Tabla HARAKIRI.PROVINCIA eliminada')
GO

IF OBJECT_ID('HARAKIRI.COMPRA', 'U') IS NOT NULL
  DROP TABLE HARAKIRI.COMPRA
  PRINT('Tabla HARAKIRI.COMPRA eliminada')
GO


-- BORRADO DE FUNCIONES

IF OBJECT_ID('HARAKIRI.NOMBRE_FUNCION') IS NOT NULL
	DROP FUNCTION HARAKIRI.NOMBRE_FUNCION
GO

-- BORRADO DE STORE PROCEDURES

IF OBJECT_ID('HARAKIRI.NOMBRE_PROCEDURE') IS NOT NULL
  DROP PROCEDURE HARAKIRI.NOMBRE_PROCEDURE
GO  

-- BORRADO DE ESQUEMA

IF EXISTS (SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'HARAKIRI')
  DROP SCHEMA HARAKIRI
GO

-- CREACIÓN DE ESQUEMA

CREATE SCHEMA HARAKIRI
GO

-- CREACIÓN DE LAS TABLAS

CREATE TABLE HARAKIRI.NOMBRE_TABLA(
    PILOTO_CODIGO int IDENTITY(1,1) NOT NULL,
    PILOTO_NOMBRE nvarchar(50),
    PILOTO_APELLIDO nvarchar(50), 
    PILOTO_NACIONALIDAD nvarchar(50), 
    PILOTO_FECHA_NACIMIENTO datetime2(3), 
    AUTO_CODIGO int 
);
GO

CREATE TABLE HARAKIRI.PROVEEDOR(
    PROVEEDOR_CUIT nvarchar(50) NOT NULL,
    PROVEEDOR_LOCALIDAD_CODIGO decimal(18,0), --FK A LOCALIDAD
    PROVEEDOR_RAZON_SOCIAL nvarchar(50), 
    PROVEEDOR_DOMICILIO nvarchar(50), 
    PROVEEDOR_MAIL nvarchar(50), 
);  
GO

CREATE TABLE HARAKIRI.LOCALIDAD(
    LOCALIDAD_CODIGO decimal(18,0) NOT NULL,
    LOCALIDAD_PROVINCIA_CODIGO decimal(18,0),
    LOCALIDAD_NOMBRE,
    LOCALIDAD_CODIGO_POSTAL
);  
GO

CREATE TABLE HARAKIRI.PROVINCIA(
    PROVINCIA_CODIGO decimal(18,0) NOT NULL,
    LOCALIDAD_NOMBRE
);  
GO

CREATE TABLE HARAKIRI.COMPRA(
    COMPRA_NUMERO decimal(19,0) NOT NULL,
    COMPRA_MEDIO_DE_PAGO_CODIGO nvarchar(255), --FK
    PROVEEDOR_CUIT nvarchar(50), --FK
    COMPRA_FECHA date,
    COMPRA_TOTAL decimal(18,2)
);  
GO

CREATE TABLE HARAKIRI.VENTA(
    VENTA_CODIGO decimal(19,0) NOT NULL,
    VENTA_CANAL_CODIGO decimal(19,0)
    VENTA_CUPON_CODIGO nvarchar(255)
    VENTA_MEDIO_DE_PAGO_CODIGO decimal(19, 0)
    VENTA_CLIENTE_CODIGO decimal(19, 0)
    VENTA_MEDIO_ENVIO_POR_LOCALIDAD_CODIGO decimal(19, 0)
    VENTA_FECHA date
    VENTA_TOTAL decimal(18, 2)
);
GO
-- CREACIÓN DE LAS PKS

ALTER TABLE HARAKIRI.TABLA ADD CONSTRAINT NOMBRE_PK PRIMARY KEY (NOMBRE_CAMPO_PK)
GO

-- CREACIÓN DE LAS FKS

ALTER TABLE HARAKIRI.TABLA ADD CONSTRAINT NOMBRE_FK FOREIGN KEY (NOMBRE_CAMPO) REFERENCES HARAKIRI.TABLA_REFERENCIADA
GO

-- CREACIÓN DE FUNCIONES

CREATE FUNCTION HARAKIRI.FUNCION(PARAMETROS)
RETURNS INT 
AS
BEGIN 
  
END 
GO 

-- CREACIÓN DE STORE PROCEDURES
CREATE PROCEDURE HARAKIRI.NOMBRE_PROCEDURE
AS
BEGIN 

  
END 
GO

-- EXECUTE DE STORE PROCEDURES

EXEC HARAKIRI.NOMBRE_PROCEDURE

------------------------
/*CREACION DE ESQUEMA*/

IF NOT EXISTS (SELECT * FROM sys.squemas WHERE name = 'HARAKIRI')

-----------------------
